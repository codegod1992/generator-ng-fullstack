{
  "name": "<%= app %>",
  "version": "0.0.1",
  "main": "src/<%= app %>.js",
  "scripts": {
    <% if (clientOnly) { %>
      "start": "gulp client.watch",
      "dev": "gulp client.watch",
      "watch": "gulp client.watch",
      "test": "gulp client.unit_test",
      "build-dist": "gulp client.build:dist"
    <%} else {%>

      "watch": "gulp client.watch",

      <% if (server === "node") { %>
        "start": "node server/index",

        <% if (usesTypescript) { %>
          "dev": "tsc && concurrently \"nodemon ./server/index --watch server\" \"gulp\"",
        <% } else { %>
          "dev": "concurrently \"nodemon ./server/index --watch server\" \"gulp\"",
        <% } %>
      <% } %>

      <% if (server === "go") { %>
        "start": "go run server/main.go",

        <% if (usesTypescript) { %>
          "dev": "tsc && concurrently \" npm start \" \"gulp\"",
        <% } else { %>
          "dev": "concurrently \"npm start\" \"gulp\"",
        <% } %>
      <% } %>

      "build-dev": "gulp client.build:dev",
      "test-client": "gulp client.unit_test",

      <% if (serverOnly && usesTypescript) { %>
        "build-dist": "gulp server.compile_tsc",
      <% } else { %>
        "build-dist": "gulp client.build:dist",
      <% } %>

      <% if (testsSeparated) { %>
        "test-server": "mocha 'tests/server/**/*_test.js' --recursive --check-leaks --reporter min --compilers js:babel-register",
        "coverage-server": "istanbul cover ./node_modules/mocha/bin/_mocha -- 'tests/server/**/*_test.js' --compilers js:babel-register",
        "coveralls-server": "istanbul cover ./node_modules/mocha/bin/_mocha -- 'tests/server/**/*_test.js' --compilers js:babel-register --report lcovonly && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
      <% } else { %>
        "test-server": "mocha 'server/**/*_test.js' --recursive --check-leaks --reporter min --compilers js:babel-register",
        "coverage-server": "istanbul cover ./node_modules/mocha/bin/_mocha -- 'server/**/*_test.js' --compilers js:babel-register",
        "coveralls-server": "istanbul cover ./node_modules/mocha/bin/_mocha -- 'server/**/*_test.js' --compilers js:babel-register --report lcovonly && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
      <% } %>

  <% } %>
  },
  "dependencies": {
    <% if (usesTypescript) {%>
      "typescript": "^2.8.3",
    <% } %>

    <% if (!clientOnly) { %>
      "lodash": "^4.6.1",
      "bluebird": "^3.3.4",

      <% if (nodeWebFrameworkServer === "express") { %>
        "body-parser": "^1.5.0",
        "express": "~4.14.0",
        "express-content-length-validator": "1.0.0",
        "morgan": "^1.5.2",
        "compression": "^1.6.2",
        "helmet": "^2.1.1",
      <% } %>

      "nodemon": "^1.9.2",
      "mongoose": "^4.4.7",
    <% } %>

    <% if (client === "ng1") { %>
      "angular": "^1.6.10",
      "angular-route": "^1.6.10",
      "font-awesome": "^4.7.0",
      "jquery": "^3.3.1",
    <% } %>      

    <% if (client === "ng2") { %>
      "@angular/common": "^6.0.0",
      "@angular/compiler": "^6.0.0",
      "@angular/core": "^6.0.0",
      "@angular/forms": "^6.0.0",
      "@angular/http": "^6.0.0",
      "@angular/platform-browser": "^6.0.0",
      "@angular/platform-browser-dynamic": "^6.0.0",
      "@angular/router": "^6.0.0",
      "core-js": "^2.4.1",
	     "zone.js": "^0.8.26",
       "reflect-metadata": "^0.1.12",
       "rxjs": "^6.1.0",
       "systemjs": "^0.19.24"
     <% } %>

     <% if (client === "vue2") { %>
       "vue": "^2.5.10",
       "vue-resource": "^1.5.0",
       "vue-router": "^3.0.1",
     <% } %>

     <% if (nodeWebFrameworkServer === "koa") { %>
       "koa": "^2.5.1",
       "koa-bodyparser": "^4.2.0",
       "koa-router": "^7.4.0",
       "koa-static": "^4.0.2",
     <% } %>

     <% if (secure) { %>
       "spdy": "^3.4.4",
     <% } %>

	   "babel-register": "^6.26.0",
     "babel-regenerator-runtime": "^6.5.0",
     "babel-cli": "^6.26.0",
     "babel-minify": "^0.4.1",
     "babel-preset-env": "^1.7.0",
     "babel-preset-minify": "^0.4.1"
  },
  "devDependencies": {
    "aliv": "^1.10.0",
    "del": "^2.2.1",
  	"gulp": "^4.0.0",
    "undertaker-forward-reference": "^1.0.2",
    "protractor": "^5.3.1",
    "browser-sync": "^2.5.2",
    "require-dir": "^1.0.0",

    <% if (client === "ng1") { %>
      "angular-mocks": "^1.6.10",
    <% } %>
      


    "gulp-babel": "^7.0.1",
    "gulp-concat": "^2.4.3",
    "gulp-coveralls": "^0.1.3",
    "gulp-typescript": "~4.0.2",
    "gulp-clean-css": "^2.0.3",
    "gulp-rename": "^1.2.0",
    "gulp-angular-embed-templates": "^2.3.0",
    "gulp-nginclude": "^0.4.8",
    "gulp-uglify": "^3.0.0",
    "gulp-rev": "^7.1.2",
    "gulp-usemin": "^0.3.24",
    "gulp-htmlmin": "^2.0.0",
    "gulp-imagemin": "^3.0.1",
    "gulp-util": "^3.0.3",

    <% if (stylePreprocessor === "less") { %>
      "gulp-less": "^3.1.0",
    <% } %>

    <% if (stylePreprocessor === "sass") { %>
      "gulp-sass": "^2.3.2",
    <% } %>

    <% if (clientBundler === "webpack") { %>
      "babel-loader": "^6.3.2",
      "css-loader": "^0.26.1",
      "file-loader": "^0.10.0",
      "html-loader": "^0.4.4",
      "style-loader": "^0.13.1",
      "webpack": "^4.8.1",
      "webpack-dev-server": "^3.1.4"
    <% } %>

    "jasmine-core": "^2.2.0",
    "karma": "^1.3.0",
    "karma-jasmine": "^1.0.2",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-firefox-launcher": "^1.0.0",
    "karma-ie-launcher": "^1.0.0",
    "karma-ng-html2js-preprocessor": "^1.0.0",
    "karma-opera-launcher": "^1.0.0",
    "karma-phantomjs-launcher": "^1.0.1",
    "karma-safari-launcher": "^1.0.0",
    "karma-ng-html2js-preprocessor": "^0.1.2",
    "mocha": "^2.4.5",
    "chai": "^3.5.0",
    "coveralls": "^2.11.2",
    "istanbul": "^0.4.4",
    "concurrently": "^2.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://<%= repoHostUrl %>/<%= userNameSpace %>/<%= app %>.git"
  },
  "author": "<%= username %>",
  "license": "MIT",
  "bugs": {
    "url": "https://<%= repoHostUrl %>/<%= userNameSpace %>/<%= app %>/issues"
  },
  "homepage": "https://<%= repoHostUrl %>/<%= userNameSpace %>/<%= app %>",
  "engines": {
    "node": "stable"
  }
}
